# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - main
stages:
- stage: __default
  jobs:
  - job: Job
    pool:
      vmImage: windows-2019
    steps:
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          # Write your PowerShell commands here.

          dir "C:\Program Files\Azure Cosmos DB Emulator\"

          Import-Module "$env:ProgramFiles\Azure Cosmos DB Emulator\PSModules\Microsoft.Azure.CosmosDB.Emulator"

          $startEmulatorCmd = "Start-CosmosDbEmulator -NoFirewall -NoUI"
          Write-Host $startEmulatorCmd
          Invoke-Expression -Command $startEmulatorCmd

          # Pipe an emulator info object to the output stream

          $Emulator = Get-Item "$env:ProgramFiles\Azure Cosmos DB Emulator\Microsoft.Azure.Cosmos.Emulator.exe"
          $IPAddress = Get-NetIPAddress -AddressFamily IPV4 -AddressState Preferred -PrefixOrigin Manual | Select-Object IPAddress

          New-Object PSObject @{
          Emulator = $Emulator.BaseName
          Version = $Emulator.VersionInfo.ProductVersion
          Endpoint = @($(hostname), $IPAddress.IPAddress) | ForEach-Object { "https://${_}:8081/" }
          MongoDBEndpoint = @($(hostname), $IPAddress.IPAddress) | ForEach-Object { "mongodb://${_}:10255/" }
          CassandraEndpoint = @($(hostname), $IPAddress.IPAddress) | ForEach-Object { "tcp://${_}:10350/" }
          GremlinEndpoint = @($(hostname), $IPAddress.IPAddress) | ForEach-Object { "http://${_}:8901/" }
          TableEndpoint = @($(hostname), $IPAddress.IPAddress) | ForEach-Object { "https://${_}:8902/" }
          IPAddress = $IPAddress.IPAddress
          }
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: false
        goals: 'package'
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(agent.builddirectory)'
        Contents: '**/target/*jar-with-dependencies.jar'
        TargetFolder: 'C:\Program Files'
        OverWrite: true
    - task: CmdLine@2
      inputs:
        script: dir && ren *jar-with-dependencies.jar targetbuildfile.jar && java -jar targetbuildfile.jar
        workingDirectory: 'C:\Program Files\s\target'


